---

- name: Add groups
  group:
    name: "{{ item }}"
  with_items: "{{ jenkins_groups }}"

- name: Add jenkins user
  user:
    name: jenkins
    comment: Jenkins Automation Server
    home: "{{ jenkins_home }}"
    shell: /bin/false
    groups: "{{ jenkins_groups }}"

- name: Create directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ jenkins_user}}"
  with_items:
    - "{{ jenkins_home }}"
    - "{{ jenkins_home }}/plugins"

- name: Copy CASC configuration
  template:
    src: "{{ jenkins_casc_template_file }}"
    dest: "{{ jenkins_home }}/jenkins.yaml"
    owner: "{{ jenkins_user}}"
  register: casc_config
  notify: Restart jenkins service

- include_tasks: centos/packages.yml
  when: ansible_distribution|lower == 'centos' or ansible_distribution|lower == 'redhat' or ansible_distribution|lower == 'amazon'

- include_tasks: centos/config.yml
  when: ansible_distribution|lower == 'centos' or ansible_distribution|lower == 'redhat' or ansible_distribution|lower == 'amazon'

- name: Copy plugins install script
  copy:
    src: plugin/install-plugins.sh
    dest: /usr/lib/jenkins/install-plugins.sh
    mode: "0755"
    owner: "{{ jenkins_user}}"

- name: Install plugins
  command: "/usr/lib/jenkins/install-plugins.sh {{ jenkins_home }}{% for p in jenkins_plugins %} {{ p }}{% endfor %}"
  register: plugins_install
  changed_when: "plugins_install.stdout == 'CHANGED'"
  notify: Restart jenkins service

- name: Ensure jenkins plugins permissions
  file:
    state: directory
    path: "{{ jenkins_home }}/plugins"
    recurse: True
    owner: "{{ jenkins_user}}"

- name: Start and enable service
  service:
    name: jenkins
    state: started
    enabled: True
